<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: EasyMonster.xml-->
<behavior name="EasyMonster" agenttype="behaviac::Monster" version="5">
  <node class="SelectorLoop" id="0">
    <property ResetChildren="false" />
    <attachment class="Precondition" id="15" flag="precondition">
      <property BinaryOperator="And" />
      <property Operator="Invalid" />
      <property Opl="Self.behaviac::Monster::findEnemys()" />
      <property Phase="Update" />
    </attachment>
    <node class="WithPrecondition" id="1">
      <node class="Condition" id="2">
        <property Operator="Equal" />
        <property Opl="Self.behaviac::KbeAgentBase::getFightType()" />
        <property Opr="const int 0" />
      </node>
      <node class="Sequence" id="5">
        <node class="Action" id="17">
          <property Method="Self.behaviac::Monster::setInBattle(false)" />
          <property ResultOption="BT_SUCCESS" />
        </node>
        <node class="Assignment" id="18">
          <property CastRight="false" />
          <property Opl="int Self.behaviac::Monster::useingSkillId" />
          <property Opr="const int 0" />
        </node>
        <node class="Action" id="6">
          <property Method="Self.behaviac::Monster::randomWalk(10)" />
          <property ResultOption="BT_INVALID" />
        </node>
      </node>
    </node>
    <node class="WithPrecondition" id="3">
      <node class="Condition" id="4">
        <property Operator="Equal" />
        <property Opl="Self.behaviac::KbeAgentBase::getFightType()" />
        <property Opr="const int 3" />
      </node>
      <node class="Sequence" id="7">
        <node class="Assignment" id="8">
          <property CastRight="false" />
          <property Opl="behaviac::EnemyInfo Self.behaviac::Monster::enemyInfo" />
          <property Opr="Self.behaviac::Monster::getEnemyInfo()" />
        </node>
        <node class="Action" id="16">
          <property Method="Self.behaviac::Monster::setInBattle(true)" />
          <property ResultOption="BT_SUCCESS" />
        </node>
        <node class="Selector" id="9">
          <node class="Sequence" id="10">
            <node class="Sequence" id="23">
              <node class="Action" id="12">
                <property Method="Self.behaviac::Monster::canSkillAttack(1)" />
                <property ResultOption="BT_INVALID" />
              </node>
            </node>
            <node class="Action" id="13">
              <property Method="Self.behaviac::Monster::useSkill(1)" />
              <property ResultOption="BT_SUCCESS" />
            </node>
            <node class="Assignment" id="19">
              <property CastRight="false" />
              <property Opl="int Self.behaviac::Monster::useingSkillId" />
              <property Opr="const int 1" />
            </node>
            <node class="Wait" id="20">
              <property Time="const float 1.1" />
            </node>
            <node class="SelectorProbability" id="26">
              <node class="DecoratorWeight" id="27">
                <property DecorateWhenChildEnds="false" />
                <property Weight="const int 50" />
                <node class="Sequence" id="32">
                  <node class="Action" id="28">
                    <property Method="Self.behaviac::Monster::useSkill(2)" />
                    <property ResultOption="BT_SUCCESS" />
                  </node>
                  <node class="Assignment" id="35">
                    <property CastRight="false" />
                    <property Opl="int Self.behaviac::Monster::useingSkillId" />
                    <property Opr="const int 2" />
                  </node>
                  <node class="Wait" id="33">
                    <property Time="const float 1" />
                  </node>
                  <node class="Action" id="34">
                    <property Method="Self.behaviac::Monster::useSkill(3)" />
                    <property ResultOption="BT_SUCCESS" />
                  </node>
                  <node class="Assignment" id="31">
                    <property CastRight="false" />
                    <property Opl="int Self.behaviac::Monster::useingSkillId" />
                    <property Opr="const int 3" />
                  </node>
                  <node class="Wait" id="36">
                    <property Time="const float 2.5" />
                  </node>
                </node>
              </node>
              <node class="DecoratorWeight" id="29">
                <property DecorateWhenChildEnds="false" />
                <property Weight="const int 50" />
                <node class="Sequence" id="38">
                  <node class="Wait" id="39">
                    <property Time="const float 1" />
                  </node>
                  <node class="True" id="30" />
                </node>
              </node>
            </node>
            <node class="Assignment" id="40">
              <property CastRight="false" />
              <property Opl="int Self.behaviac::Monster::useingSkillId" />
              <property Opr="const int 0" />
            </node>
            <node class="Action" id="37">
              <property Method="Self.behaviac::Monster::idle()" />
              <property ResultOption="BT_SUCCESS" />
            </node>
          </node>
          <node class="Sequence" id="11">
            <node class="Condition" id="22">
              <property Operator="GreaterEqual" />
              <property Opl="Self.behaviac::Monster::getEnemyDistance()" />
              <property Opr="const double 20" />
            </node>
            <node class="Action" id="14">
              <property Method="Self.behaviac::Monster::chaseTarget(int Self.behaviac::Monster::targetID)" />
              <property ResultOption="BT_SUCCESS" />
            </node>
          </node>
          <node class="Selector" id="24">
            <node class="DecoratorAlwaysFailure" id="42">
              <property DecorateWhenChildEnds="false" />
              <node class="Action" id="25">
                <property Method="Self.behaviac::Monster::idle()" />
                <property ResultOption="BT_SUCCESS" />
              </node>
            </node>
          </node>
          <node class="Selector" id="43">
            <node class="Sequence" id="44">
              <node class="Action" id="41">
                <property Method="Self.behaviac::Monster::getFightMoveTarget(1)" />
                <property ResultOption="BT_SUCCESS" />
              </node>
              <node class="IfElse" id="46">
                <node class="Condition" id="48">
                  <property Operator="Less" />
                  <property Opl="Self.behaviac::Monster::distanceTo(behaviac::Vector3 Self.behaviac::Monster::moveTargetPosition)" />
                  <property Opr="const double 0.5" />
                </node>
                <node class="Action" id="50">
                  <property Method="Self.behaviac::Monster::idle()" />
                  <property ResultOption="BT_SUCCESS" />
                </node>
                <node class="Action" id="47">
                  <property Method="Self.behaviac::Monster::fightMove(1,behaviac::Vector3 Self.behaviac::Monster::moveTargetPosition)" />
                  <property ResultOption="BT_SUCCESS" />
                </node>
              </node>
              <node class="Wait" id="45">
                <property Time="const float 2" />
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
</behavior>